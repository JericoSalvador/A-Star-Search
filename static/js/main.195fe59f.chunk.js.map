{"version":3,"sources":["components/State.js","components/Board.js","components/PriorityQueue.js","views/BoardView.js","components/DrawButtonBar.js","components/AStar.js","App.js","reportWebVitals.js","index.js"],"names":["State","position","this","pos","row","col","state","other","x","y","xx","yy","Math","abs","sqrt","boardstates","Board","board","len","length","Array","fill","start","end","setStart","setEnd","path","paths","getPaths","children","i","checkPathAvailable","push","xpos","ypos","positionFromRowCol","equal","newBoard","QueueItem","priority","item","PriorityQueue","items","newItem","added","splice","isEmpty","shift","console","log","range","n","keys","SIZE","styles","blackBox","width","height","backgroundColor","border","greyBox","darkcyanBox","whiteBox","greenBox","blueBox","BoxView","status","onMouseDown","onMouseUp","onMouseOver","onClick","style","BoardView","display","justifyContent","alignItems","onMouseLeave","map","divStyle","padding","margin","DrawBar","buttons","useState","active","setActive","buttonList","setButtonList","useEffect","l","key","disabled","buttonText","buttonFunction","className","AStar","props","block","drawStatus","visitedStates","priorityQ","message","search","bind","handleSearch","changeStart","changeEnd","changeBlock","erase","addWall","setDrawStatusFalse","setDrawStatusTrue","draw","functions","setState","args","func","euclideanDistanceTo","cost","enqueue","priorityQueueItem","dequeue","currentState","currentPath","visited","newPath","getChildren","child","distance","setTimeout","reset","show","setPath","setWall","setUnvisited","value","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.195fe59f.chunk.js","sourcesContent":["\nexport class State {\n    constructor(position){\n        if(!position)\n            this.pos= [0,0]; \n        else\n            this.pos= position;\n    }\n    setCurrentPosition(row, col){\n        this.pos= [row,col];\n    }\n    equal(state){\n        \n        return this.pos[0] === state.position[0] && this.pos[1] === state.position[1]\n    }\n    get position(){\n        return this.pos;\n    }\n    manhattanDistanceTo(other){\n        const [x,y] = this.position;\n        const [xx,yy] = other.position; \n\n        const distance = Math.abs(x - xx) + Math.abs(y - yy)\n        return distance; \n    }\n    euclideanDistanceTo(other){\n        const [x,y] = this.position;\n        const [xx,yy] = other.position; \n\n        return Math.sqrt((x-xx)*(x - xx) + (y-yy)*(y - yy))\n    }\n\n}\n","import { State } from './State'\n\nexport const boardstates = {\n    wall : null,\n    unvisited : 0,\n    visited : 1,\n    end: 3, \n    start: 4, \n    path:5,\n}\n\n\nexport class Board {\n    constructor(board){\n        if(!board)\n        {\n            this.len = 4; \n            this.board = new Array(this.len * this.len).fill(boardstates.unvisited);\n        }\n        else{\n            this.board = board//[...board]; \n            this.len = Math.sqrt(board.length);\n        }\n        this.start = new State([1,1])\n    this.end = new State([this.len-2,this.len-2])\n        this.setStart(this.start)\n        this.setEnd(this.end)\n    } \n    getChildren(state){\n        const paths = this.getPaths(state); \n        \n        const children = []; \n        let path;\n        for(let i = 0; i < paths.length; i++){\n            path = paths[i]; \n            if (this.checkPathAvailable(path))\n                children.push(new State(path)); \n        }\n        return children;\n    }\n    getPaths(state){\n        const [xpos,ypos] = state.position;\n        const paths = [];\n        //check down\n        if(xpos >= 1)\n            paths.push([xpos-1,ypos]);\n        //check up\n        if(xpos < this.len - 1)\n            paths.push([xpos+1,ypos]);\n        //check left\n        if(ypos>= 1)\n            paths.push([xpos,ypos -1]);\n        //check right\n        if(ypos < this.len - 1)\n            paths.push([xpos,ypos+1]);\n        \n        return paths;\n    }\n    setEnd(state){\n        const [x,y] = this.end.position\n        this.board[x* this.len + y] = boardstates.unvisited; \n\n        this.end = state\n        const [xpos,ypos] = state.position;\n        this.board[xpos * this.len + ypos] = boardstates.end; \n    }\n    setStart(state){\n        const [x,y] = this.start.position\n        this.board[x* this.len + y] = boardstates.unvisited; \n\n        this.start = state\n        const [xpos,ypos] = state.position;\n        this.board[xpos * this.len + ypos] = boardstates.start; \n    }\n    setVisit(state){\n        const [xpos,ypos] = state.position;\n        if(this.board[xpos * this.len + ypos] === boardstates.unvisited)\n        this.board[xpos * this.len + ypos] = boardstates.visited; \n    }\n    positionFromRowCol([row,col]){\n        return row * this.len + col;\n    }\n    checkPathAvailable(path){\n        const position = this.positionFromRowCol(path); \n        if (this.board[position] === boardstates.wall)\n            return false; \n        return true; \n    }\n    setPath(path){\n        for(let i = 0; i < path.length; i++){\n            const state = path[i]\n            if(state.equal(this.start)) continue\n\n            const [x,y] = state.position\n            const pos = x * this.len + y\n            this.board[pos] = boardstates.path\n        }\n    }\n    setWall(state){\n        const [x,y] = state.position\n        const pos = x*this.len + y\n\n        if (this.board[pos] !== boardstates.wall)\n        this.board[pos] = boardstates.wall\n    }\n    setUnvisited(state){\n        const [x,y] = state.position\n        const pos = x*this.len + y\n        // if (this.board[pos] === boardstates.wall)\n        this.board[pos] = boardstates.unvisited\n    }\n    reset(){\n        const newBoard = new Array(this.len * this.len).fill(boardstates.unvisited)\n        for(let i = 0; i < this.board.length; i++){\n            if(this.board[i] === boardstates.wall)\n                newBoard[i] = this.board[i] \n        }\n        this.board = newBoard\n        this.setStart(this.start)\n        this.setEnd(this.end)\n    }\n}","\nclass QueueItem {\n\n    constructor(priority, item){\n        this.priority = priority\n        this.item = item\n    }\n}\n\nexport class PriorityQueue {\n\n    constructor(){\n        this.items = []\n    }\n\n    enqueue(priority, item){\n\n        const newItem = new QueueItem(priority, item)\n        \n        let added = false; \n\n        for(let i = 0; i < this.items.length; i++){\n            if(this.items[i].priority > newItem.priority){\n                this.items.splice(i,0,newItem)\n                added = true\n                break\n            }\n        }\n        if(!added){\n            this.items.push(newItem)\n        }\n    }\n\n    dequeue(){\n        if(this.isEmpty)\n            return null\n        return this.items.shift()\n\n    }\n\n    get isEmpty(){\n        if(this.items.length === 0){\n            return true\n        }\n        return false\n    }\n\n    get front(){\n        if(this.isEmpty)\n            return null\n        return this.items[0]\n    }\n\n    get print(){\n        console.log(this.items)\n    }\n}","import PropTypes from 'prop-types'\nimport { boardstates } from '../components/Board'\n\nlet range = n => [...Array(n).keys()]\n\nconst SIZE = 30\nconst styles = {\n\n    blackBox:{\n        width:SIZE, \n        height:SIZE,\n        backgroundColor: 'black',\n        border:\"1px solid black\",\n    },\n    greyBox:{\n        width:SIZE, \n        height:SIZE,\n        backgroundColor: 'lightgray',\n        border:\"1px solid black\",\n    },\n    darkcyanBox:{\n        width:SIZE, \n        height:SIZE,\n        backgroundColor: 'darkcyan',\n        border:\"1px solid black\",\n    },\n    whiteBox:{\n        width:SIZE, \n        height:SIZE,\n        backgroundColor: 'white',\n        border:\"1px solid black\",\n    },\n    greenBox:{\n        width:SIZE,\n        height:SIZE, \n        backgroundColor:\"green\",\n        border:\"1px solid black\",\n    },\n    blueBox:{\n        width:SIZE,\n        height:SIZE, \n        backgroundColor:\"blue\",\n        border:\"1px solid black\",\n    }\n    \n}\nconst BoxView = ({status, onMouseDown, onMouseUp, onMouseOver, onClick}) =>\n{\n    if (status === boardstates.unvisited){\n        return <div style={styles.whiteBox} \n        onMouseDown={onMouseDown} \n        onMouseUp={onMouseUp} \n        onMouseOver={onMouseOver}\n        onClick={onClick}></div>\n    }\n    else if(status === boardstates.visited){\n        return <div style={styles.greyBox}\n        onMouseDown={onMouseDown} \n        onMouseUp={onMouseUp} \n        onMouseOver={onMouseOver}\n        onClick={onClick}></div>\n    }\n    else if(status === boardstates.start){\n        return <div style={styles.greenBox}></div>\n    }\n    else if(status === boardstates.wall){\n        return <div style = {styles.blackBox}\n        onMouseDown={onMouseDown} \n        onMouseUp={onMouseUp} \n        onMouseOver={onMouseOver}\n        onClick={onClick}></div>\n    }\n    else if(status === boardstates.end){\n        return <div style={styles.blueBox}></div>\n    }\n    else if(status === boardstates.path){\n        return <div style={styles.darkcyanBox}\n        onMouseDown={onMouseDown} \n        onMouseUp={onMouseUp} \n        onMouseOver={onMouseOver}\n        onClick={onClick}></div>\n    }\n}\n\nexport const BoardView = ({board, onMouseDown, onMouseUp, onMouseOver,onClick}) => {\n    const len = Math.sqrt(board.length)\n    return (\n        <div style={{display:\"flex\", justifyContent:\"center\",alignItems:\"center\"}} \n        onMouseUp={onMouseUp} onMouseDown={onMouseDown}\n        onMouseLeave={onMouseUp}\n        >\n            <div>\n            {range(len).map((x)=><div style={{display:'flex'}}>\n                {range(len).map((y) => <BoxView status = {board[x*len + y]} \n                onMouseOver={() => onMouseOver([x,y])}\n                onMouseDown={() => onClick([x,y])}\n                />)}\n            </div>)}\n            </div>\n        </div>\n    )\n}\n\nBoardView.propTypes = {\n    board: PropTypes.array,\n}","import React, { useEffect, useState } from 'react'\nimport PropTypes from 'prop-types'\n\nconst divStyle= {\n    padding:5,\n    margin:5,\n}\nexport function DrawBar({buttons}){\n\n    const [active, setActive] = useState(\"Draw Wall\")\n    \n    const [buttonList, setButtonList] = useState([])\n    \n    useEffect( ()=>{\n        const l = []\n        for(const key in buttons){\n            const disabled = key === active ? true : false\n            l.push([key, buttons[key], disabled])\n        }\n        setButtonList(l)\n    },[active])\n\n    return <div style={divStyle}>\n        {buttonList.map( ([buttonText,buttonFunction,disabled]) => <button \n                    style={divStyle}\n                    className=\"btn btn-secondary\" \n                    onClick={() => {setActive(buttonText);buttonFunction()}}\n                    disabled={disabled}\n                    >{buttonText}</button>) }\n    </div>\n}\n","import { Board, boardstates } from './Board'\nimport { State } from './State'\nimport { PriorityQueue } from './PriorityQueue'\nimport { BoardView } from '../views/BoardView'\nimport { DrawBar } from './DrawButtonBar'\nimport React from 'react'\n\nconst SPEED_MS = 100 \nexport class AStar extends React.Component{\n    constructor(props) {\n        super(props);\n\n\n        this.state = {\n            board: new Board(new Array(10*10).fill(boardstates.unvisited)),\n            block: \"wall\",\n            drawStatus: false,\n        }\n\n        this.visitedStates = []; \n        this.priorityQ = new PriorityQueue();\n        this.message = \"Hello World\";\n\n        this.search = this.search.bind(this)\n        this.handleSearch = this.handleSearch.bind(this)\n        this.changeStart = this.changeStart.bind(this)\n        this.changeEnd = this.changeEnd.bind(this)\n        this.changeBlock = this.changeBlock.bind(this)\n        this.erase = this.erase.bind(this)\n        this.addWall = this.addWall.bind(this)\n\n        this.setDrawStatusFalse = this.setDrawStatusFalse.bind(this)\n        this.setDrawStatusTrue = this.setDrawStatusTrue.bind(this)\n        this.draw = this.draw.bind(this)\n\n        this.functions = {\n            \"wall\": this.addWall,\n            \"start\": this.changeStart,\n            \"end\": this.changeEnd,\n            \"erase\":this.erase,\n        }\n    }\n    setDrawStatusTrue(){\n        this.setState({\n            drawStatus: true\n        })\n    }\n    setDrawStatusFalse(){\n        this.setState({\n            drawStatus: false\n        })\n    }\n    draw(args){\n        const func = this.functions[this.state.block]\n        if(this.state.drawStatus)\n            func(args)\n    }\n\n    distance(state){\n        return state.euclideanDistanceTo(this.state.board.end);\n    }\n    search(){\n        const item = {state: this.state.board.start, path: [],cost: 0}\n        this.priorityQ.enqueue(0,item); \n        while(!this.priorityQ.isEmpty){\n            const priorityQueueItem = this.priorityQ.dequeue().item;\n            const currentState = priorityQueueItem.state;\n            const currentPath = priorityQueueItem.path;\n            if(!this.visited(currentState))\n            this.visitedStates.push(currentState);\n            \n            if(currentState.equal(this.state.board.end))\n                return([...currentPath])\n                \n            const newPath = [...currentPath, currentState]\n\n            let children = this.state.board.getChildren(currentState); \n            for(let i = 0; i < children.length; i++){\n                let child = children[i];\n                if(this.visited(child))\n                    continue; \n\n                const newItem = {state: child, path:newPath, cost:priorityQueueItem.cost + 1};\n                let priority = this.distance(child); \n                priority = priority + priorityQueueItem.cost \n                this.priorityQ.enqueue(priority, newItem)\n            }\n            console.log(this.priorityQ)\n        }\n        return null\n    }\n    show(){\n        const board = this.state.board.board\n        for(let i = 0; i < this.visitedStates.length; i++)\n        {\n            const state = this.visitedStates[i]\n            const [x,y] = state.position\n            const pos = x * this.state.board.len + y\n            setTimeout(()=>{\n                if(board[pos] === boardstates.unvisited)\n                board[pos] = boardstates.visited\n                this.setState({})\n            },SPEED_MS * i)\n        }\n    }\n    visited(state){\n        for(let i = 0; i < this.visitedStates.length; i++)\n        {\n            if(this.visitedStates[i].equal(state))\n                return true;\n        }\n        return false; \n    }\n    inFringe(state){\n        for(let i = 0; i < this.priorityQ.items.length; i++)\n        {\n            let currentstate = this.priorityQ.items[i].item.state\n            if (currentstate.equal(state))\n                return true\n        }\n        return false\n    }\n    handleSearch(){\n        this.state.board.reset()\n        this.visitedStates = []\n        this.priorityQ = new PriorityQueue()\n        const path = this.search()\n\n        this.show()\n        setTimeout(()=>{\n            if(!path)return\n            this.state.board.setPath(path)\n            this.setState({})\n        },this.visitedStates.length * SPEED_MS)\n    }\n    changeStart([row,col]){\n        this.state.board.setStart(new State([row,col]))\n        this.setState({})\n    }\n    changeEnd([row,col]){\n        this.state.board.setEnd(new State([row,col]))\n        this.setState({})\n    }\n    addWall([row,col]){\n        this.state.board.setWall(new State([row,col]))\n        this.setState({})\n    }\n    erase([row,col]){\n        this.state.board.setUnvisited(new State([row,col]))\n        this.setState({})\n    }\n    changeBlock(value){\n        this.setState({block:value})\n    }\n    render(){\n        const buttons = {\n            \"Move Start\":()=>this.changeBlock(\"start\"),\n            \"Move Goal\":()=>this.changeBlock(\"end\"),\n            \"Draw Wall\" :()=>this.changeBlock(\"wall\"),\n            \"Erase\":()=>this.changeBlock(\"erase\"),\n        }\n        return(\n            <div>\n                <h1>A-star</h1>\n                <BoardView board={this.state.board.board} onMouseDown={this.setDrawStatusTrue} \n                           onMouseUp={this.setDrawStatusFalse} onMouseOver={this.draw}\n                           onClick={this.functions[this.state.block]}/>\n                <DrawBar buttons={buttons}/>\n                <div className=\"row\">\n                <button className=\"col-lg-12 btn btn-success\" onClick={this.handleSearch}>Search!</button>\n                </div>\n            </div> \n        );\n    }\n}","import { AStar } from './components/AStar'\nimport { BoardView } from './views/BoardView'\n\nfunction App() {\n  return (\n    <div>\n      <AStar />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import 'bootstrap/dist/css/bootstrap.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}